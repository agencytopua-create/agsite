// Web3Forms Integration Script
// Automatically handles all forms on the site

(function() {
    'use strict';
    
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
    function getThankYouUrl() {
        const lang = document.documentElement.lang;
        const path = window.location.pathname;
        
        if (path.includes('/ru/')) {
            return '/ru/thank-you/';
        } else if (path.includes('/en/')) {
            return '/en/thank-you/';
        } else {
            return '/thank-you/';
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–æ—Ä–º Contact Form 7
    function initializeForms() {
        const forms = document.querySelectorAll('.wpcf7-form, form.form');
        
        forms.forEach(function(form) {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–æ—Ä–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
            if (form.hasAttribute('data-web3forms-initialized')) {
                return;
            }
            
            // –ò–∑–º–µ–Ω—è–µ–º action –∏ method
            form.setAttribute('action', 'https://api.web3forms.com/submit');
            form.setAttribute('method', 'POST');
            form.setAttribute('data-web3forms-initialized', 'true');
            
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è Contact Form 7
            const oldFields = form.querySelectorAll('input[name^="_wpcf7"], input[name="honeypot-"]');
            oldFields.forEach(function(field) {
                if (field.parentElement && field.parentElement.classList.contains('honeypot-437-wrap')) {
                    field.parentElement.remove();
                } else if (!field.name.includes('recaptcha')) {
                    field.remove();
                }
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º Web3Forms access key
            if (!form.querySelector('input[name="access_key"]')) {
                const accessKeyInput = document.createElement('input');
                accessKeyInput.type = 'hidden';
                accessKeyInput.name = 'access_key';
                accessKeyInput.value = 'cc8100b9-c892-4d69-b444-04bd73ef8884';
                form.insertBefore(accessKeyInput, form.firstChild);
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º subject
            if (!form.querySelector('input[name="subject"]')) {
                const subjectInput = document.createElement('input');
                subjectInput.type = 'hidden';
                subjectInput.name = 'subject';
                subjectInput.value = '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ TOP AGENCY';
                form.insertBefore(subjectInput, form.firstChild);
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º from_name
            if (!form.querySelector('input[name="from_name"]')) {
                const fromNameInput = document.createElement('input');
                fromNameInput.type = 'hidden';
                fromNameInput.name = 'from_name';
                fromNameInput.value = 'TOP AGENCY Website';
                form.insertBefore(fromNameInput, form.firstChild);
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º redirect URL (–æ—Ç–∫–ª—é—á–∞–µ–º, –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ JS)
            // Web3Forms –Ω–µ –≤—Å–µ–≥–¥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å redirect –≤ —Ñ–æ—Ä–º–µ
            // if (!form.querySelector('input[name="redirect"]')) {
            //     const redirectInput = document.createElement('input');
            //     redirectInput.type = 'hidden';
            //     redirectInput.name = 'redirect';
            //     redirectInput.value = window.location.origin + getThankYouUrl();
            //     form.insertBefore(redirectInput, form.firstChild);
            // }
            
            // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –ø–æ–ª—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            const fieldMappings = {
                'your-name': 'name',
                'your-tel': 'phone',
                'your-email': 'email',
                'your-site': 'website',
                'your-message': 'message',
                'select-services': 'service',
                'ua_phone': 'phone',
                'your-product': 'product',
                'your-sku': 'sku',
                'your-color': 'color',
                'your-size': 'size',
                'your-qty': 'quantity'
            };
            
            Object.keys(fieldMappings).forEach(function(oldName) {
                const field = form.querySelector('[name="' + oldName + '"]');
                if (field && oldName !== fieldMappings[oldName]) {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä–æ–µ –∏–º—è –≤ data-–∞—Ç—Ä–∏–±—É—Ç–µ
                    field.setAttribute('data-original-name', oldName);
                }
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const submitButton = form.querySelector('button[type="submit"], input[type="submit"]');
                const originalButtonText = submitButton ? submitButton.textContent || submitButton.value : '';
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                if (submitButton) {
                    submitButton.disabled = true;
                    if (submitButton.tagName === 'BUTTON') {
                        submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
                    } else {
                        submitButton.value = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
                    }
                }
                
                // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
                const formData = new FormData(form);
                
                // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –ø–æ–ª—è Contact Form 7 –¥–ª—è Web3Forms
                const oldToNew = {
                    'your-name': 'name',
                    'your-tel': 'phone',
                    'your-email': 'email',
                    'your-site': 'website',
                    'your-message': 'message',
                    'select-services': 'service',
                    'ua_phone': 'phone'
                };
                
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π FormData —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
                const newFormData = new FormData();
                
                // –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –ø–æ–ª—è, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞—è –≥–¥–µ –Ω—É–∂–Ω–æ
                for (let [key, value] of formData.entries()) {
                    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –ø–æ–ª—è Contact Form 7 –∏ Akismet
                    if (key.startsWith('_wpcf7') || 
                        key.startsWith('_') || 
                        key === 'honeypot-437' ||
                        key === 'honeypot-439' ||
                        key.includes('_ak_') ||
                        key.includes('file-')) {
                        console.log('‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω–æ–µ –ø–æ–ª–µ:', key);
                        continue;
                    }
                    
                    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                    if (value === '' || value === null || value === undefined) {
                        console.log('‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ:', key);
                        continue;
                    }
                    
                    const newKey = oldToNew[key] || key;
                    newFormData.append(newKey, value);
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ—Å–ª–∏ –Ω–µ—Ç
                if (!newFormData.get('access_key')) {
                    newFormData.set('access_key', 'cc8100b9-c892-4d69-b444-04bd73ef8884');
                }
                if (!newFormData.get('subject')) {
                    newFormData.set('subject', '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ TOP AGENCY');
                }
                if (!newFormData.get('from_name')) {
                    newFormData.set('from_name', 'TOP AGENCY Website');
                }
                
                // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –Ω–∞ Web3Forms...');
                console.log('üìß Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è: agencytopua@gmail.com');
                console.log('üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:');
                for (let [key, value] of newFormData.entries()) {
                    console.log(`   ${key}: ${value}`);
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
                if (!newFormData.get('access_key')) {
                    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç access_key!');
                    alert('–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.');
                    if (submitButton) {
                        submitButton.disabled = false;
                        if (submitButton.tagName === 'BUTTON') {
                            submitButton.textContent = originalButtonText;
                        } else {
                            submitButton.value = originalButtonText;
                        }
                    }
                    return;
                }
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ fetch
                fetch('https://api.web3forms.com/submit', {
                    method: 'POST',
                    body: newFormData
                })
                .then(function(response) {
                    console.log('üì° –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞, —Å—Ç–∞—Ç—É—Å:', response.status);
                    if (!response.ok) {
                        throw new Error('HTTP —Å—Ç–∞—Ç—É—Å: ' + response.status);
                    }
                    return response.json();
                })
                .then(function(data) {
                    console.log('üì¶ –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);
                    
                    if (data.success) {
                        console.log('‚úÖ –§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
                        // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ Thank You —Å—Ç—Ä–∞–Ω–∏—Ü—É
                        window.location.href = window.location.origin + getThankYouUrl();
                    } else {
                        console.error('‚ùå –û—à–∏–±–∫–∞ Web3Forms:', data.message);
                        throw new Error(data.message || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã');
                    }
                })
                .catch(function(error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
                    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
                    
                    var errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã.\n\n';
                    errorMessage += '–î–µ—Ç–∞–ª–∏: ' + error.message + '\n\n';
                    errorMessage += '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å (F12) –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.';
                    
                    alert(errorMessage);
                    
                    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                    if (submitButton) {
                        submitButton.disabled = false;
                        if (submitButton.tagName === 'BUTTON') {
                            submitButton.textContent = originalButtonText;
                        } else {
                            submitButton.value = originalButtonText;
                        }
                    }
                });
            });
        });
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeForms);
    } else {
        initializeForms();
    }
    
    // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º
    if (typeof MutationObserver !== 'undefined') {
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.addedNodes.length) {
                    initializeForms();
                }
            });
        });
        
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    }
})();

